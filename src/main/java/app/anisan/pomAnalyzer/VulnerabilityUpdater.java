package app.anisan.pomAnalyzer;

import org.apache.http.HttpEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.conn.ssl.NoopHostnameVerifier;
import org.apache.http.conn.ssl.TrustAllStrategy;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.ssl.SSLContextBuilder;
import org.apache.http.util.EntityUtils;

public final class VulnerabilityUpdater {
	public static void updateVulnerabilities(POMDependencyObject a_POMDependencyObject) throws Throwable {
		CloseableHttpClient		httpClient	= HttpClients
	            .custom()
	            .setSSLContext(new SSLContextBuilder().loadTrustMaterial(null, TrustAllStrategy.INSTANCE).build())
	            .setSSLHostnameVerifier(NoopHostnameVerifier.INSTANCE)
	            .build();
		HttpGet					request		= new HttpGet("https://mvnrepository.com/artifact/"+a_POMDependencyObject.getGroupID()+"/"+a_POMDependencyObject.getArtiefectID()+"/" + a_POMDependencyObject.getCurrentVersion());
		CloseableHttpResponse	response	= httpClient.execute(request);
		if (response.getStatusLine().getStatusCode() == 200) {
			HttpEntity entity = response.getEntity();
			if (entity != null) {
				// return it as a String
				String result = EntityUtils.toString(entity);
				System.out.println(result);
			}
		}else {
			System.out.println(response.getStatusLine().getStatusCode()); // 200
			System.out.println(response.getStatusLine().getReasonPhrase()); // OK
			System.out.println(response.getStatusLine().toString());
		}
	}
}
